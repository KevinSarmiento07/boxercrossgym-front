const drawer = (
    <div>
      <Toolbar />
      <Divider />
      <List>
        {["Listado", "Formulario"].map((text, index) => (
          <NavLink
            to={index % 2 == 0 ? "/users" : "/users/register"}
            key={index}
          >
            <ListItem key={text} disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}
                </ListItemIcon>
                <ListItemText primary={text} />
                <ExpandLessOutlinedIcon />
              </ListItemButton>
            </ListItem>
          </NavLink>
        ))}
      </List>
      <Divider />
      <List>
        <NavLink to={"/users/register"}>
          <ListItem disablePadding>
            <ListItemButton>
              <ListItemIcon>
                <InboxIcon />
              </ListItemIcon>
              <ListItemText primary={"Formulario"} />
            </ListItemButton>
          </ListItem>
        </NavLink>
      </List>
    </div>
  );


<Box
        component="nav"
        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}
        aria-label="mailbox folders"
      >
        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}
        <Drawer
          variant="temporary"
          open={mobileOpen}
          onTransitionEnd={handleDrawerTransitionEnd}
          onClose={handleDrawerClose}
          ModalProps={{
            keepMounted: true, // Better open performance on mobile.
          }}
          sx={{
            display: { xs: "block", sm: "none" },
            "& .MuiDrawer-paper": {
              boxSizing: "border-box",
              width: drawerWidth,
            },
          }}
        >
          {drawer}
        </Drawer>
        <Drawer
          variant="permanent"
          sx={{
            display: { xs: "none", sm: "block" },
            "& .MuiDrawer-paper": {
              boxSizing: "border-box",
              width: drawerWidth,
            },
          }}
          open
        >
          {drawer}
        </Drawer>
        <Drawer>
          
        </Drawer>
      </Box>






<ListItem>
              <ListItemIcon>
                <Group></Group>
              </ListItemIcon>
              <ListItemText primary="Usuarios" />
            </ListItem>
            <ListItem>
              <ListItemIcon>
                <PaidIcon></PaidIcon>
              </ListItemIcon>
              <ListItemText primary="Pagos" />
            </ListItem>



            {navLinks.map((item, i) => {
              if (item.child?.length > 0) {
                return (
                  <div key={i}>
                    <ListItemButton onClick={handleClick}>
                      <ListItemIcon>{item.icon}</ListItemIcon>
                      <ListItemText primary={item.tittle} />
                      {open ? <ExpandLess /> : <ExpandMore />}
                    </ListItemButton>
                    <Collapse in={open} timeout="auto" unmountOnExit>
                      <List component="div" disablePadding>
                        {item.child.map((itemChild, j) => {
                          return (
                            <ListItemButton sx={{ pl: 4 }} key={j}>
                              <ListItemIcon>{itemChild.icon}</ListItemIcon>
                              <ListItemText primary={itemChild.tittle} />
                            </ListItemButton>
                          );
                        })}
                      </List>
                    </Collapse>
                  </div>
                );
              } else {
                <ListItem key={i}>
                  <ListItemButton component={NavLink} href="/users">
                    <ListItemIcon>{item.icon}</ListItemIcon>
                    <ListItemText primary={item.tittle} />
                  </ListItemButton>
                </ListItem>;
              }
            })}